#!/bin/bash

# Color setup
NOCOLOR='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'

# Banner display (make sure the banner script exists)
source Banner

echo -e "${YELLOW}Select an option to execute:${NOCOLOR}"
echo "----------------------------"

# Ensure the AG_Configs executable has permission to run
chmod +x "$HOME/AG_Configs-PakTool/AG_Configs" || { echo -e "${RED}Failed to make AG_Configs executable!${NOCOLOR}"; exit 1; }

# Define directories and paths
AG_Configs_Pak="$HOME/AG_Configs0/AG_Configs_Pak"
GAME_PACH="/storage/emulated/0/AG_Configs-Tool/Output"

# Create necessary directories if they do not exist
if [[ ! -d "/storage/emulated/0/AG_Configs-Tool" ]]; then
    mkdir -p "/storage/emulated/0/AG_Configs-Tool" || { echo -e "${RED}Failed to create directory!${NOCOLOR}"; exit 1; }
fi

# Unpack function
unpakgamepach1() {
    EXECUTABLE_SCRIPT="$HOME/AG_Configs-PakTool/AG_Configs"
    $EXECUTABLE_SCRIPT -a "$AG_Configs_Pak/$(basename "$selected_file")" "$GAME_PACH" || {
        echo -e "${RED}Failed to unpack the file!${NOCOLOR}"
        return 1
    }
}

# Repack function
repakgamepach1() {
    EXECUTABLE_SCRIPT="$HOME/AG_Configs-PakTool/AG_Configs"
    $EXECUTABLE_SCRIPT -a -r "$selected_file" "$GAME_PACH" || {
        echo -e "${RED}Failed to repack the file!${NOCOLOR}"
        return 1
    }
}

# Unpack game PACH files
unpakgamepach() {
    prompt="Please select a file to unpack:"
    options=($(find /storage/emulated/0/AG_Configs-Tool -name "*.pak" -o -name "*.obb"))
    PS3="$prompt "
    
    # Check if options are available
    if [ ${#options[@]} -eq 0 ]; then
        echo -e "${RED}No .pak or .obb files found! Exiting.${NOCOLOR}"
        return 1
    fi
    
    select opt in "${options[@]}" "Quit"; do
        if (( REPLY == 1 + ${#options[@]} )); then
            break
        elif (( REPLY > 0 && REPLY <= ${#options[@]} )); then
            selected_file="${options[$REPLY-1]}"
            echo "You picked $selected_file which is file $REPLY"
            mkdir -p "$AG_Configs_Pak" || { echo -e "${RED}Failed to create AG_Configs_Pak directory!${NOCOLOR}"; return 1; }
            cp "$selected_file" "$AG_Configs_Pak/" || { echo -e "${RED}Failed to copy selected file!${NOCOLOR}"; return 1; }
    
